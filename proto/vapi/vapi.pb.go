// Code generated by protoc-gen-go.
// source: vapi.proto
// DO NOT EDIT!

/*
Package vapi is a generated protocol buffer package.

It is generated from these files:
	vapi.proto

It has these top-level messages:
	File
	PingRequest
	PingResponse
	ListRequest
	ListResponse
*/
package vapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// primitives
type File struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Size  int64  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Mtime int64  `protobuf:"varint,3,opt,name=mtime" json:"mtime,omitempty"`
	IsDir bool   `protobuf:"varint,4,opt,name=is_dir" json:"is_dir,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// RPC Ping
type PingRequest struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// RPC ListFiles
type ListRequest struct {
	User string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListResponse struct {
	Request      *ListRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	Layout       string       `protobuf:"bytes,2,opt,name=layout" json:"layout,omitempty"`
	UrlPrefix    string       `protobuf:"bytes,3,opt,name=url_prefix" json:"url_prefix,omitempty"`
	RemoteServer string       `protobuf:"bytes,4,opt,name=remote_server" json:"remote_server,omitempty"`
	RelPath      string       `protobuf:"bytes,5,opt,name=rel_path" json:"rel_path,omitempty"`
	LocalPath    string       `protobuf:"bytes,6,opt,name=local_path" json:"local_path,omitempty"`
	Files        []*File      `protobuf:"bytes,7,rep,name=Files" json:"Files,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListResponse) GetRequest() *ListRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ListResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterType((*File)(nil), "vapi.File")
	proto.RegisterType((*PingRequest)(nil), "vapi.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "vapi.PingResponse")
	proto.RegisterType((*ListRequest)(nil), "vapi.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "vapi.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for VApi service

type VApiClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	ListFiles(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type vApiClient struct {
	cc *grpc.ClientConn
}

func NewVApiClient(cc *grpc.ClientConn) VApiClient {
	return &vApiClient{cc}
}

func (c *vApiClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/vapi.VApi/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vApiClient) ListFiles(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/vapi.VApi/ListFiles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VApi service

type VApiServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	ListFiles(context.Context, *ListRequest) (*ListResponse, error)
}

func RegisterVApiServer(s *grpc.Server, srv VApiServer) {
	s.RegisterService(&_VApi_serviceDesc, srv)
}

func _VApi_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VApiServer).Ping(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _VApi_ListFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VApiServer).ListFiles(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _VApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vapi.VApi",
	HandlerType: (*VApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _VApi_Ping_Handler,
		},
		{
			MethodName: "ListFiles",
			Handler:    _VApi_ListFiles_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x51, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0x6c, 0xa9, 0xfb, 0xc8, 0xb6, 0xe5, 0xb1, 0x12, 0x52, 0xe0, 0x00, 0x95, 0x4f, 0x70, 0x29,
	0x52, 0xe1, 0x07, 0x7a, 0xe1, 0xc4, 0x01, 0x71, 0xe0, 0x5a, 0x19, 0x58, 0x8a, 0xa5, 0x24, 0x36,
	0xb6, 0x53, 0x01, 0x1f, 0xc5, 0x37, 0xe2, 0x47, 0x22, 0x22, 0xf5, 0x96, 0x1d, 0xcf, 0xce, 0xce,
	0x4c, 0x00, 0x76, 0x42, 0xcb, 0xa5, 0x36, 0xca, 0x29, 0x64, 0xe1, 0x9b, 0xaf, 0x81, 0xdd, 0xcb,
	0x82, 0x70, 0x06, 0xac, 0x12, 0x25, 0xe5, 0xfd, 0x45, 0xff, 0x2a, 0x0b, 0x93, 0x95, 0x3f, 0x94,
	0x1f, 0xf8, 0x69, 0x80, 0x73, 0x18, 0x96, 0x4e, 0xfa, 0xc7, 0x41, 0x1c, 0x0f, 0x61, 0x24, 0xed,
	0xe6, 0x4d, 0x9a, 0x9c, 0xf9, 0x79, 0xc2, 0x2f, 0x60, 0xfa, 0x28, 0xab, 0xed, 0x13, 0x7d, 0xd6,
	0x64, 0x1d, 0x1e, 0xc1, 0xb8, 0x24, 0x6b, 0xc5, 0xb6, 0x11, 0xe3, 0x97, 0x30, 0x4b, 0xef, 0x56,
	0xab, 0xca, 0xd2, 0x3e, 0xe1, 0x1a, 0xa6, 0x0f, 0xd2, 0xba, 0x56, 0xc0, 0x1f, 0xaf, 0x2d, 0x99,
	0x7f, 0x2b, 0x5a, 0xb8, 0x8f, 0x68, 0x25, 0xe3, 0xbf, 0x7d, 0x98, 0x25, 0x6e, 0x23, 0xc6, 0x61,
	0x6c, 0xd2, 0x5e, 0xe4, 0x4f, 0x57, 0x27, 0xcb, 0x98, 0xb1, 0x2b, 0xe8, 0x0d, 0x17, 0xe2, 0x5b,
	0xd5, 0x2e, 0x89, 0x20, 0x02, 0xd4, 0xa6, 0xd8, 0x68, 0x43, 0xef, 0xf2, 0x2b, 0x86, 0xca, 0xf0,
	0x14, 0xe6, 0x86, 0x4a, 0xe5, 0x68, 0xe3, 0x4f, 0xef, 0x28, 0x65, 0xcb, 0xf0, 0x18, 0x26, 0x86,
	0x3c, 0x35, 0x38, 0x18, 0xb6, 0xcb, 0x85, 0x7a, 0x15, 0x0d, 0x36, 0x8a, 0xd8, 0x19, 0x0c, 0x43,
	0x89, 0x36, 0x1f, 0x2f, 0x06, 0xde, 0x02, 0x24, 0x0b, 0x01, 0x5a, 0x95, 0xc0, 0x9e, 0xd7, 0x5a,
	0xe2, 0x0d, 0xb0, 0x50, 0x02, 0x36, 0xf6, 0x3a, 0x85, 0x9d, 0x63, 0x17, 0x4a, 0xb1, 0x78, 0x0f,
	0xef, 0x20, 0x0b, 0x19, 0xa2, 0x2e, 0xee, 0x87, 0x6a, 0xb7, 0xba, 0x65, 0xf0, 0xde, 0xcb, 0x28,
	0xfe, 0xdb, 0xdb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0x07, 0xd0, 0xf8, 0xe9, 0x01, 0x00,
	0x00,
}
